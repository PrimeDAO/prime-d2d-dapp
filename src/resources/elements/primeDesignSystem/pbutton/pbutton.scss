@import "../styles";

@mixin standardBackground {
  border: none;
  background-image: $Gradient08;
  background-size: 200% auto;
  color: $Neutral04;
}

@mixin standardButton {
  /**
    * note one benefit of all: is to set box-sizing: border-box
    * This resets all of the selected elementâ€™s properties to their initial values as defined in the CSS spec.
    */
  all: initial;
  outline: none;
  padding: 14px 28px;
  font-family: Inter;
  font-size: 16px;
  font-style: normal;
  font-weight: 700;
  line-height: 19px;
  letter-spacing: 0.6000000238418579px;
  text-align: center;
  text-transform: uppercase;
  border-radius: 50px;
  cursor: pointer;
  background: transparent;
  transform: translateY(0);
  user-select: none;
  color: $Neutral04;
  white-space: nowrap;

  display: inline-flex;
  justify-content: center;

  &>.icon {
    width: 0;
    padding-left: 0px;
    opacity: 0;
    overflow: hidden;
    transition: width 0.5s linear, opacity 0.75s linear, padding-left 0.5s linear;
    &.is-loading {
      width: 16px;
      opacity: 1;
      padding-left: 6px;
    }
    .spinner {
      width: auto;
      animation: spin 2s linear infinite;
    }
  }

  &:focus {
    box-shadow: 0 0 10px $Shade06;
  }

  &.disabled,
  &.disabled:hover,
  &:disabled,
  &:disabled:hover {
    cursor: not-allowed;
    box-shadow: none;
  }

  &:hover:active:not(.disabled):not(:disabled),
  &:focus:active:not(.disabled):not(:disabled) {
    transform: translateY(-1px);
  }

  &.full-width {
    width: -webkit-fill-available;
    width: -moz-available;
  }

  transition: background 0.25s ease-in, transform 0.1s ease-in;
}

button {
  &.primary {
    @include standardButton;
    @include standardBackground;

    &.disabled,
    &.disabled:hover,
    &:disabled,
    &:disabled:hover {
      background: $Neutral02;
    }
    &:hover:not(.disabled):not(:disabled):not(.no-animation) {
      background-position: right center;
    }
  }

  &.secondary {
    @include standardButton;

    border: 2px solid $Shade01;
    padding: 12px 26px;

    &:hover:not(.disabled):not(:disabled) {
      background-color: $Border01;
      border-color: $Primary01;
      color: $Neutral04;
    }

    &.disabled,
    &.disabled:hover,
    &:disabled,
    &:disabled:hover {
      border-color: $Neutral02;
      background: transparent;
      color: $Neutral02;
    }

    // the button is down
    &:hover:active:not(.disabled):not(:disabled),
    &:focus:active:not(.disabled):not(:disabled) {
      @include standardBackground;
    }
  }

  &.tertiary {
    @include standardButton;

    &:hover {
      background: $Border01;
    }

    &.disabled,
    &.disabled:hover,
    &:disabled,
    &:disabled:hover {
      color: $Neutral02;
      background: transparent;
    }

    // the button is down
    &:hover:active:not(.disabled):not(:disabled),
    &:focus:active:not(.disabled):not(:disabled) {
      @include standardBackground;
    }
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}